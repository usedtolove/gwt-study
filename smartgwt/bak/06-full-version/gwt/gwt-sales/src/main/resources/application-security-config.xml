<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <!-- url 访问权限 -->
    <http auto-config="true" use-expressions="true">
    <!--<http use-expressions="true">-->
        <form-login login-page="/login.html"
                    login-processing-url="/loginVerify"
                    authentication-success-handler-ref="customAuthenticationSuccessHandler"
                    authentication-failure-handler-ref="customAuthenticationFailureHandler"/>
        <!--匿名可访问-->
        <intercept-url pattern="/login.html" access="permitAll"/>
        <intercept-url pattern="/failed.html" access="permitAll"/>
        <intercept-url pattern="/accountDisabled.html" access="permitAll"/>
        <intercept-url pattern="/accountExpired.html" access="permitAll"/>
        <intercept-url pattern="/accountLocked.html" access="permitAll"/>
        <intercept-url pattern="/credentialsExpired.html" access="permitAll"/>
        <!--登录授权可访问-->
        <intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <!-- logout 跳转 url -->
        <logout invalidate-session="true" logout-success-url="/login.html"/>

        <!-- session 控制 -->
        <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />

        <session-management
                session-authentication-error-url="/sessionAuthenticationError.html"
                invalid-session-url="/sessionExpired.html"
                session-authentication-strategy-ref="sas">
        </session-management>
    </http>

    <!-- session 失效控制 -->
    <beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <beans:property name="sessionRegistry" ref="sessionRegistry" />
        <beans:property name="expiredUrl" value="/sessionExpired.html" />
    </beans:bean>
    <!--<beans:bean id="myAuthFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">-->
        <!--<beans:property name="sessionAuthenticationStrategy" ref="sas" />-->
        <!--<beans:property name="authenticationManager" ref="authenticationManager" />-->
    <!--</beans:bean>-->
    <beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
        <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
        <beans:property name="maximumSessions" value="1" />
        <!--true:第二次登陆会失败，除非第一次登陆失效 -->
        <!--false:第二次登陆会踢掉第一次登陆-->
        <beans:property name="exceptionIfMaximumExceeded" value="false"/>
    </beans:bean>
    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />


    <!--自定义用户认证类-->
    <beans:bean id="userDetailService"
                class="com.mycompany.java.common.service.impl.MyDetailsServiceImpl"/>

    <!-- 后台管理权限认证 -->
    <authentication-manager alias="authenticationManager">
        <!--定义认证提供接口  -->
        <authentication-provider user-service-ref="userDetailService">
            <!--定义密码加密算法  -->
            <!--<password-encoder ref="passwordEncoder">
                   &lt;!&ndash;定义密码字元，增加密码的安全性  &ndash;&gt;
                   <salt-source ref="saltSource"/>
                  </password-encoder>    -->
        </authentication-provider>

    </authentication-manager>

    <!--自定义 AuthenticationSuccessHandler-->
    <!--default-target-url 的值根据本机 gwt:run 给出地址自行替换-->
    <!--/sales.html?gwt.codesvr=127.0.0.1:9997"-->
    <beans:bean id="customAuthenticationSuccessHandler"
                class="com.mycompany.java.common.util.CustomAuthenticationSuccessHandler">
        <!--<beans:property name="defaultTargetUrl" value="/success.html"/>-->
        <!--<beans:property name="defaultTargetUrl" value="/sales.html?gwt.codesvr=127.0.0.1:9997"/>-->
        <beans:property name="defaultTargetUrl" value="/sales.html"/>
        <beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
    </beans:bean>

    <!--自定义AuthenticationFailureHandler-->
    <beans:bean id="customAuthenticationFailureHandler"
                class="com.mycompany.java.common.util.CustomAuthenticationFailureHandler">
        <!--密码错误-->
        <beans:property name="passwordFailureUrl" value="/failed.html"/>
        <!--账号禁用-->
        <beans:property name="accountDisabledUrl" value="/accountDisabled.html"/>
        <!--账号过期-->
        <beans:property name="accountExpiredUrl" value="/accountExpired.html"/>
        <!--账号锁定-->
        <beans:property name="accountLockedUrl" value="/accountLocked.html"/>
        <!--账号凭证过期-->
        <beans:property name="credentialsExpiredUrl" value="/credentialsExpired.html"/>
        <!--最大密码输入错误次数, 否则账号锁定-->
        <beans:property name="maxLoginFailureCount" value="5"/>
    </beans:bean>
</beans:beans>